@page "/budget"

@rendermode InteractiveServer

@inject IdentityUserAccessor UserAccessor
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext dbContext
@inject AuthenticationStateProvider AuthenticationStateProvider

@*
User can create and update their budget and categories.
Accessible to users that are logged in.
*@

<PageTitle>Budget</PageTitle>

<h1>
    Budget
</h1>

@if (!string.IsNullOrEmpty(err)){
    <Alert Color="AlertColor.Danger">
        <Icon Name="IconName.ExclamationTriangleFill"/> @err <Button Color="ButtonColor.Link" @onclick="ClearErr"><Icon Name="IconName.X"/></Button>
    </Alert>
}

@if (!string.IsNullOrEmpty(msg)){
    <Alert Color="AlertColor.Success">
        <Icon Name="IconName.CheckCircle"/> @msg <Button Color="ButtonColor.Link" @onclick="ClearMsg"><Icon Name="IconName.X"/></Button>
    </Alert>
}

@if (elmts.Count() > 0){
    <div class='mb-3'>
        <label class="m-1">Monthly budget:</label>
        <CurrencyInput TValue="decimal" Placeholder="Amount" @bind-Value="bdgt.MonthlyIncome" Locale="@userCurrencyLocale" Min="0.0m" MaximumFractionDigits="2"/>
    </div>
}

@foreach(var elmt in elmts){
    <CategoryElmt data="@elmt"  cats="@categories" locale="@userCurrencyLocale" RmvElmtFnc="() => RemoveCategoryElmt(elmt)" />
}

<div class="d-flex flex-column align-items-start gap-4 my-4">
    <Button Color="ButtonColor.Primary" @onclick="AddCategoryElmt">Add more...</Button>
    <Button Color="ButtonColor.Primary" @onclick="SaveChangesAsync">Save</Button>
</div>
