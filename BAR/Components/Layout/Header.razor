@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row d-flex mb-3 justify-content-between align-items-center">
    <div class="p-2">
        <a href="/">
            <img src="/Images/Smooth-BAR-Logo-100.png">
        </a>
    </div>
    <div class="add"> 
        <Button Color="ButtonColor.Light" @onclick=AddTransaction> + Add Transaction
        </Button>
    </div>
    <div class="p-2"> 
        <Dropdown Color="DropdownColor.None" Style="background-color: white;">
            <DropdownToggleButton>
                <ProfileAvatar UserFName="@UserFName" AvatarColor="@AvatarColor" Size="profile-avatar"/>
            </DropdownToggleButton>
            <DropdownMenu>
                <DropdownHeader>Hi, @UserFName!</DropdownHeader>
                <DropdownItem To="/Account/Manage" Type="DropdownItemType.Link"><Icon Name="IconName.Gear"/> Settings</DropdownItem>
                <DropdownDivider>Dropdown header</DropdownDivider>
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button class="btn dropdown-item" type="submit">
                    <Icon Name="IconName.BoxArrowRight" Color="IconColor.Danger"/> Log out
                    </button>
                </form>
            </DropdownMenu>
        </Dropdown>
    </div>

</div>

@* Add Transaction popup *@
<Modal @ref="addT" Title="Add Transaction">
    <BodyTemplate> 
        Date:
        <div class="mb-3">
            <DateInput TValue="DateOnly" @bind-Value="@date1" Placeholder="Enter Date" />
        </div>
            <div class="mb-3">Entered date: @date1</div> 
        Label:
        <input type="text" class="mt-2"/> <br>
        Amount:
        <input type="text" class="mt-2"/> <br> <br>
        Category:
        <Dropdown Color="DropdownColor.Secondary">
            <DropdownToggleButton>Add Category</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem To="#" Type="DropdownItemType.Link">Housing</DropdownItem>
                <DropdownItem To="#" Type="DropdownItemType.Link">Food</DropdownItem>
                <DropdownItem To="#" Type="DropdownItemType.Link">ETC</DropdownItem>
            </DropdownMenu>
        </Dropdown> <br>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="CancelAddTransaction">Add</Button>
        <Button Color="ButtonColor.Secondary" @onclick="CancelAddTransaction">Cancel</Button>
    </FooterTemplate>
</Modal>

@code {
   [Parameter] public string UserFName {get; set;} 
    [Parameter] public string AvatarColor {get; set;}
    private Modal addT;
    private string? currentUrl;

    private async Task AddTransaction()
    {
        await addT?.ShowAsync();
    }

    private async Task CancelAddTransaction()
    {
        await addT?.HideAsync();
    }

    private DateOnly date1 = DateOnly.FromDateTime(DateTime.Now.AddDays(0));
    
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    // Vars
    // database stuff still tbd
}



    


